// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// dilate_cpp
IntegerMatrix dilate_cpp(IntegerMatrix segim, IntegerMatrix kern, IntegerVector expand);
RcppExport SEXP _ProPane_dilate_cpp(SEXP segimSEXP, SEXP kernSEXP, SEXP expandSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type segim(segimSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type kern(kernSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type expand(expandSEXP);
    rcpp_result_gen = Rcpp::wrap(dilate_cpp(segim, kern, expand));
    return rcpp_result_gen;
END_RCPP
}
// mat_diff_sum
double mat_diff_sum(Rcpp::NumericMatrix mat1, Rcpp::NumericMatrix mat2, double scale, int delta_x, int delta_y);
RcppExport SEXP _ProPane_mat_diff_sum(SEXP mat1SEXP, SEXP mat2SEXP, SEXP scaleSEXP, SEXP delta_xSEXP, SEXP delta_ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type mat1(mat1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type mat2(mat2SEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< int >::type delta_x(delta_xSEXP);
    Rcpp::traits::input_parameter< int >::type delta_y(delta_ySEXP);
    rcpp_result_gen = Rcpp::wrap(mat_diff_sum(mat1, mat2, scale, delta_x, delta_y));
    return rcpp_result_gen;
END_RCPP
}
// stack_image_inVar
SEXP stack_image_inVar(NumericMatrix post_image, NumericMatrix post_inVar, IntegerMatrix post_weight, NumericMatrix pre_image, NumericMatrix pre_inVar, SEXP pre_weight_sexp, IntegerVector offset, Nullable<LogicalMatrix> post_mask);
RcppExport SEXP _ProPane_stack_image_inVar(SEXP post_imageSEXP, SEXP post_inVarSEXP, SEXP post_weightSEXP, SEXP pre_imageSEXP, SEXP pre_inVarSEXP, SEXP pre_weight_sexpSEXP, SEXP offsetSEXP, SEXP post_maskSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type post_image(post_imageSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type post_inVar(post_inVarSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type post_weight(post_weightSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pre_image(pre_imageSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pre_inVar(pre_inVarSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pre_weight_sexp(pre_weight_sexpSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< Nullable<LogicalMatrix> >::type post_mask(post_maskSEXP);
    rcpp_result_gen = Rcpp::wrap(stack_image_inVar(post_image, post_inVar, post_weight, pre_image, pre_inVar, pre_weight_sexp, offset, post_mask));
    return rcpp_result_gen;
END_RCPP
}
// stack_image
SEXP stack_image(NumericMatrix post_image, IntegerMatrix post_weight, NumericMatrix pre_image, SEXP pre_weight_sexp, IntegerVector offset, Nullable<LogicalMatrix> post_mask);
RcppExport SEXP _ProPane_stack_image(SEXP post_imageSEXP, SEXP post_weightSEXP, SEXP pre_imageSEXP, SEXP pre_weight_sexpSEXP, SEXP offsetSEXP, SEXP post_maskSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type post_image(post_imageSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type post_weight(post_weightSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pre_image(pre_imageSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pre_weight_sexp(pre_weight_sexpSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< Nullable<LogicalMatrix> >::type post_mask(post_maskSEXP);
    rcpp_result_gen = Rcpp::wrap(stack_image(post_image, post_weight, pre_image, pre_weight_sexp, offset, post_mask));
    return rcpp_result_gen;
END_RCPP
}
// stack_exp
SEXP stack_exp(NumericMatrix post_exp, NumericMatrix pre_exp, IntegerVector offset);
RcppExport SEXP _ProPane_stack_exp(SEXP post_expSEXP, SEXP pre_expSEXP, SEXP offsetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type post_exp(post_expSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pre_exp(pre_expSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type offset(offsetSEXP);
    rcpp_result_gen = Rcpp::wrap(stack_exp(post_exp, pre_exp, offset));
    return rcpp_result_gen;
END_RCPP
}
// stack_exp_mask
SEXP stack_exp_mask(NumericMatrix post_exp, NumericMatrix pre_exp, IntegerVector offset, LogicalMatrix post_mask);
RcppExport SEXP _ProPane_stack_exp_mask(SEXP post_expSEXP, SEXP pre_expSEXP, SEXP offsetSEXP, SEXP post_maskSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type post_exp(post_expSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pre_exp(pre_expSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< LogicalMatrix >::type post_mask(post_maskSEXP);
    rcpp_result_gen = Rcpp::wrap(stack_exp_mask(post_exp, pre_exp, offset, post_mask));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ProPane_dilate_cpp", (DL_FUNC) &_ProPane_dilate_cpp, 3},
    {"_ProPane_mat_diff_sum", (DL_FUNC) &_ProPane_mat_diff_sum, 5},
    {"_ProPane_stack_image_inVar", (DL_FUNC) &_ProPane_stack_image_inVar, 8},
    {"_ProPane_stack_image", (DL_FUNC) &_ProPane_stack_image, 6},
    {"_ProPane_stack_exp", (DL_FUNC) &_ProPane_stack_exp, 3},
    {"_ProPane_stack_exp_mask", (DL_FUNC) &_ProPane_stack_exp_mask, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_ProPane(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
